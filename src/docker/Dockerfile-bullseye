# Fetch the vendor with the builder platform to avoid QEMU issues
FROM --platform=$BUILDPLATFORM mcr.microsoft.com/dotnet/aspnet:6.0-bullseye-slim

ENV DEBIAN_FRONTEND=noninteractive

# Install:
# - Azure Pipelines agent system requirements
# - zsh, for inter-operability
# - gzip, make, tar, unzip, wget, yq, zip, zstd for developer ease-of-life
RUN apt-get update -q \
    && apt-get install -y -q --no-install-recommends \
        ca-certificates \
        curl \
        git \
        git-lfs \
        gnupg \
        gzip \
        iputils-ping \
        jq \
        make \
        sudo \
        tar \
        unzip \
        wget \
        zip \
        zsh \
        zstd \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists

# Copy helper script, then verify installation
COPY arch.sh .
RUN chmod +x arch.sh \
    && ./arch.sh

# Install Azure CLI, then verify installation
RUN curl -LsSf https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > /etc/apt/trusted.gpg.d/microsoft.asc.gpg \
    && echo "deb [arch=$(./arch.sh)] https://packages.microsoft.com/repos/azure-cli $(. /etc/os-release; echo ${VERSION_CODENAME}) main" > /etc/apt/sources.list.d/azure-cli.list \
    && apt-get update -q \
    && apt-get install -y -q --no-install-recommends \
        azure-cli \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists \
    && az --version

# Install Powershell, then verify installation
ARG POWERSHELL_VERSION
ENV POWERSHELL_VERSION ${POWERSHELL_VERSION}
RUN mkdir -p /opt/microsoft/powershell \
    && curl -LsSf https://github.com/PowerShell/PowerShell/releases/download/v${POWERSHELL_VERSION}/powershell-${POWERSHELL_VERSION}-linux-$(./arch.sh).tar.gz | tar -xz -C /opt/microsoft/powershell \
    && chmod +x /opt/microsoft/powershell/pwsh \
    && ln -s /opt/microsoft/powershell/pwsh /usr/bin/pwsh \
    && pwsh -Version

# Install Azure Pipelines Agent sources, then verify installation
ARG AGENT_VERSION
ENV AGENT_VERSION ${AGENT_VERSION}
ENV AGENT_HOME /azp
RUN mkdir -p ${AGENT_HOME} \
    && curl -LsSf https://vstsagentpackage.azureedge.net/agent/${AGENT_VERSION}/pipelines-agent-linux-$(./arch.sh)-${AGENT_VERSION}.tar.gz | tar -xz -C ${AGENT_HOME} \
    && cd $AGENT_HOME \
    && chmod +x ./run-docker.sh ./config.sh \
    && AGENT_ALLOW_RUNASROOT="1" ./run-docker.sh --version

# Install YQ, then verify installation
ARG YQ_VERSION
ENV YQ_VERSION ${YQ_VERSION}
RUN curl -LsSf https://github.com/mikefarah/yq/releases/download/v${YQ_VERSION}/yq_linux_$(ARCH_AMD64=amd64 ./arch.sh) -o /usr/bin/yq \
    && chmod +x /usr/bin/yq \
    && yq --version

# Cleanup helper script
RUN rm arch.sh

# Set agent home as working directory
WORKDIR ${AGENT_HOME}

# Install Azure Pipelines Agent startup script
COPY start.sh .
RUN chmod +x start.sh

CMD ["./start.sh"]
