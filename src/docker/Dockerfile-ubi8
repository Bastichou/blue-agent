FROM registry.access.redhat.com/ubi8/ubi-minimal:8.7

# Install:
# - Azure Pipelines agent system requirements
# - Azure CLI system requirements (Python 3.9, plus C/Rust build tools for libs non pre-built on this platform)
# - ASP.NET Core runtime
# - zsh, for inter-operability
# - gzip, make, tar, unzip, wget, yq, zip, zstd for developer ease-of-life
RUN microdnf install -y --refresh --nodocs --setopt=install_weak_deps=0 \
        aspnetcore-runtime-6.0 \
        ca-certificates \
        cargo \
        curl \
        gcc \
        gcc-c++ \
        git-core \
        git-lfs \
        gnupg \
        gzip \
        hostname \
        iputils \
        jq \
        make \
        openssl-devel \
        pkg-config \
        python39 \
        python39-devel \
        python39-pip \
        sudo \
        tar \
        unzip \
        wget \
        zip \
        zsh \
        zstd \
    && microdnf clean all \
    && rm -rf /var/cache/yum

# Install Azure CLI, then verify installation
RUN python3 -m pip install --upgrade pip setuptools wheel \
    && python3 -m pip install azure-cli \
    && rm -rf $HOME/.cache/pip \
    && az --version

# Copy helper script, then verify installation
COPY arch.sh .
RUN chmod +x arch.sh \
    && bash arch.sh

# Install Powershell, then verify installation
ARG POWERSHELL_VERSION
ENV POWERSHELL_VERSION ${POWERSHELL_VERSION}
RUN mkdir -p /opt/microsoft/powershell \
    && curl -LsSf https://github.com/PowerShell/PowerShell/releases/download/v${POWERSHELL_VERSION}/powershell-${POWERSHELL_VERSION}-linux-$(bash arch.sh).tar.gz | tar -xz -C /opt/microsoft/powershell \
    && chmod +x /opt/microsoft/powershell/pwsh \
    && ln -s /opt/microsoft/powershell/pwsh /usr/bin/pwsh \
    && pwsh -Version

# Install Azure Pipelines Agent sources, then verify installation
ARG AGENT_VERSION
ENV AGENT_VERSION ${AGENT_VERSION}
ENV AGENT_HOME /azp
RUN mkdir -p ${AGENT_HOME} \
    && curl -LsSf https://vstsagentpackage.azureedge.net/agent/${AGENT_VERSION}/pipelines-agent-linux-$(bash arch.sh)-${AGENT_VERSION}.tar.gz | tar -xz -C ${AGENT_HOME} \
    && cd $AGENT_HOME \
    && chmod +x run-docker.sh config.sh \
    && AGENT_ALLOW_RUNASROOT="1" bash run-docker.sh --version

# Install YQ, then verify installation
ARG YQ_VERSION
ENV YQ_VERSION ${YQ_VERSION}
RUN curl -LsSf https://github.com/mikefarah/yq/releases/download/v${YQ_VERSION}/yq_linux_$(ARCH_AMD64=amd64 bash arch.sh) -o /usr/bin/yq \
    && chmod +x /usr/bin/yq \
    && yq --version

# Cleanup helper script
RUN rm arch.sh

# Set agent home as working directory
WORKDIR ${AGENT_HOME}

# Install Azure Pipelines Agent startup script
COPY start.sh .
RUN chmod +x start.sh

CMD bash start.sh
