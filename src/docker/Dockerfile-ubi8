# Fetch the vendor with the builder platform to avoid QEMU issues
FROM --platform=$BUILDPLATFORM registry.access.redhat.com/ubi8/ubi-minimal:8.7

# Install:
# - Azure Pipelines agent system requirements
# - ASP.NET Core runtime
# - "zsh", for inter-operability
# - "gzip, make, tar, unzip, wget, zip, zstd" for developer ease-of-life
RUN microdnf install -y --refresh --nodocs --setopt=install_weak_deps=0 \
        aspnetcore-runtime-6.0 \
        ca-certificates \
        curl \
        git-core \
        git-lfs \
        gnupg \
        gzip \
        hostname \
        iputils \
        jq \
        make \
        tar \
        unzip \
        wget \
        zip \
        zsh \
        zstd \
    && microdnf clean all \
    && rm -rf /var/cache/yum

# Copy helper script, then verify installation
COPY arch.sh .
RUN chmod +x arch.sh \
    && ./arch.sh

# Install Azure CLI with RPM, then verify installation
RUN rpm --import https://packages.microsoft.com/keys/microsoft.asc \
    && curl -LsS https://packages.microsoft.com/config/rhel/8/prod.repo > /etc/yum.repos.d/azure-cli.repo \
    && microdnf install -y --refresh --nodocs --setopt=install_weak_deps=0 \
        azure-cli \
    && microdnf clean all \
    && rm -rf /var/cache/yum \
    && az --version

# Install Powershell, then verify installation
ARG POWERSHELL_VERSION
ENV POWERSHELL_VERSION ${POWERSHELL_VERSION}
RUN mkdir -p /opt/microsoft/powershell \
    && curl -LsS https://github.com/PowerShell/PowerShell/releases/download/v${POWERSHELL_VERSION}/powershell-${POWERSHELL_VERSION}-$(./arch.sh).tar.gz | tar -xz -C /opt/microsoft/powershell \
    && chmod +x /opt/microsoft/powershell/pwsh \
    && ln -s /opt/microsoft/powershell/pwsh /usr/bin/pwsh \
    && pwsh -Version

# Install Azure Pipelines Agent sources, then verify installation
ARG AGENT_VERSION
ENV AGENT_VERSION ${AGENT_VERSION}
ENV AGENT_HOME /azp
RUN mkdir -p ${AGENT_HOME} \
    && curl -LsS https://vstsagentpackage.azureedge.net/agent/${AGENT_VERSION}/pipelines-agent-$(./arch.sh)-${AGENT_VERSION}.tar.gz | tar -xz -C ${AGENT_HOME} \
    && cd $AGENT_HOME \
    && chmod +x ./run-docker.sh ./config.sh \
    && AGENT_ALLOW_RUNASROOT="1" ./run-docker.sh --version

# Cleanup helper script
RUN rm arch.sh

# Set agent home as working directory
WORKDIR ${AGENT_HOME}

# Install Azure Pipelines Agent startup script
COPY start.sh .
RUN chmod +x start.sh

CMD ["./start.sh"]
