{{- if and (.Values.autoscaling.enabled) (.Capabilities.APIVersions.Has "keda.sh/v1alpha1") }}
apiVersion: keda.sh/v1alpha1
kind: TriggerAuthentication
metadata:
  name: {{ include "this.fullname" . }}
  labels:
    {{- include "this.labels" . | nindent 4 }}
spec:
  secretTargetRef:
    - parameter: organizationURL
      name: {{ include "this.fullname" . }}
      key: url
    - parameter: personalAccessToken
      name: {{ include "this.fullname" . }}
      key: pat
---
apiVersion: keda.sh/v1alpha1
kind: ScaledJob
metadata:
  name: {{ include "this.fullname" . }}
  labels:
    {{- include "this.labels" . | nindent 4 }}
spec:
  jobTargetRef:
    parallelism: 1
    activeDeadlineSeconds: {{ .Values.pipelines.timeout | int | required "A value for .Values.pipelines.timeout is required" }}
    template:
      metadata:
        labels:
          {{- include "this.labels" . | nindent 10 }}
      spec:
        {{- with .Values.imagePullSecrets }}
        imagePullSecrets:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        serviceAccountName: {{ include "this.serviceAccountName" . }}
        securityContext:
          {{- toYaml .Values.podSecurityContext | nindent 10 }}
        {{- with .Values.initContainers }}
        initContainers:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        terminationGracePeriodSeconds: {{ .Values.pipelines.timeout | int | required "A value for .Values.pipelines.timeout is required" }}
        containers:
          - name: {{ .Chart.Name }}
            securityContext:
              {{- toYaml .Values.securityContext | nindent 14 }}
            image: "{{ .Values.image.repository | required "A value for .Values.image.repository is required" }}:{{ .Values.image.flavor | required "A value for .Values.image.flavor is required" }}-{{ .Values.image.version | default .Chart.Version }}"
            imagePullPolicy: {{ .Values.image.pullPolicy }}
            lifecycle:
              preStop:
                exec:
                  command: [bash, -c, "./config.sh remove --auth PAT --token $AZP_TOKEN"]
            env:
              - name: VSO_AGENT_IGNORE
                value: AZP_TOKEN
              - name: AGENT_ALLOW_RUNASROOT
                value: "1"
              - name: AZP_AGENT_NAME
                valueFrom:
                  fieldRef:
                    apiVersion: v1
                    fieldPath: metadata.name
              - name: AZP_URL
                valueFrom:
                  secretKeyRef:
                    name: {{ include "this.fullname" . }}
                    key: url
              - name: AZP_POOL
                value: {{ .Values.pipelines.pool | quote | required "A value for .Values.pipelines.pool is required" }}
              - name: AZP_WORK
                value: {{ .Values.pipelines.workDir | quote }}
              - name: AZP_TOKEN
                valueFrom:
                  secretKeyRef:
                    name: {{ include "this.fullname" . }}
                    key: pat
              {{- range .Values.pipelines.capabiliies }}
              - name: {{ . }}
              {{- end }}
            {{- with .Values.additionalEnv }}
              {{- toYaml . | nindent 14 }}
            {{- end }}
            resources:
              {{- toYaml .Values.resources | nindent 14 }}
            volumeMounts:
              - name: workdir
                mountPath: {{ .Values.pipelines.workDir | quote }}
            {{- with .Values.extraVolumeMounts }}
              {{- toYaml . | nindent 14 }}
            {{- end }}
        volumes:
          - name: workdir
            ephemeral:
              volumeClaimTemplate:
                spec:
                  accessModes: [ "ReadWriteOnce" ]
                  storageClassName: {{ .Values.pipelines.cacheType | required "A value for .Values.pipelines.cacheType is required" }}
                  resources:
                    requests:
                      storage: {{ .Values.pipelines.cacheSize | required "A value for .Values.pipelines.cacheSize is required" }}
        {{- with .Values.extraVolumes }}
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- with .Values.nodeSelector }}
        nodeSelector:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- with .Values.affinity }}
        affinity:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- with .Values.tolerations }}
        tolerations:
          {{- toYaml . | nindent 10 }}
        {{- end }}
  maxReplicaCount: {{ sub (.Values.autoscaling.maxReplicas | int | required "A value for .Values.autoscaling.maxReplicas is required") (.Values.autoscaling.minReplicas | int | required "A value for .Values.autoscaling.minReplicas is required") }}
  minReplicaCount: 0
  pollingInterval: 5
  scalingStrategy:
    strategy: accurate
  triggers:
    - type: azure-pipelines
      metadata:
        poolName: {{ .Values.pipelines.pool | required "A value for .Values.pipelines.pool is required" }}
        demands: {{ join "," .Values.pipelines.capabiliies | default "" }}
      authenticationRef:
        name: {{ include "this.fullname" . }}
{{- end }}
