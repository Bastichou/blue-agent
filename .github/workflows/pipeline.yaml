name: pipeline

on:
  schedule:
    - cron: 0 0 * * *
  push:
    branches:
      - develop
      - feat/*
      - hotfix/*
      - main
  pull_request:
    branches:
      - develop
      - feat/*
      - hotfix/*
      - main

env:
  CONTAINER_NAME: ${{ github.repository }}
  CONTAINER_REGISTRY: ghcr.io

jobs:
  build-helm:
    name: Build Helm chart
    runs-on: ubuntu-22.04
    steps:
      - name: checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: true

      - name: Version
        id: version
        run: |
          echo "version=$(make version)" >> $GITHUB_OUTPUT
          echo "version_full=$(make version-full)" >> $GITHUB_OUTPUT

      - name: Setup Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.11.2

      - name: Package Helm chart
        run: |
          cp README.md src/helm/azure-pipelines-agent/
          helm package \
            --version ${{ steps.version.outputs.version }} \
            --app-version ${{ steps.version.outputs.version }} \
            --destination .cr-release-packages \
            src/helm/azure-pipelines-agent

      - name: Upload Helm chart
        uses: actions/upload-artifact@v3
        with:
          name: helm-chart
          path: .cr-release-packages

  deploy-helm:
    name: Deploy Helm chart
    needs:
      - build-deploy-docker
      - build-helm
    if: github.ref == 'refs/heads/main' # Only deploy on main branch, as there is only one Helm repo
    runs-on: ubuntu-22.04
    steps:
      - name: checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: true

      - name: Configure Git
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"

      - name: Download Helm chart
        uses: actions/download-artifact@v3
        with:
          name: helm-chart
          path: .cr-release-packages

      - name: Archive Helm chart
        uses: helm/chart-releaser-action@v1.5.0
        with:
          charts_dir: src/helm
          skip_packaging: true
        env:
          CR_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-deploy-docker:
    name: Build & deploy container image "${{ matrix.os }}"
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        include:
          - os: bullseye
            arch: linux/amd64,linux/arm/v7,linux/arm64/v8
          - os: focal
            arch: linux/amd64,linux/arm/v7,linux/arm64/v8
          - os: jammy
            arch: linux/amd64,linux/arm/v7,linux/arm64/v8
          - os: ubi8
            arch: linux/amd64,linux/arm64/v8
    steps:
      - name: checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: true

      - name: Configure Git
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"

      - name: Version
        id: version
        run: |
          echo "version=$(make version)" >> $GITHUB_OUTPUT
          echo "version_full=$(make version-full)" >> $GITHUB_OUTPUT

      - name: Set up QEMU
        id: setup-qemu
        uses: docker/setup-qemu-action@v2
        with:
          platforms: ${{ matrix.arch }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.CONTAINER_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Container meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.CONTAINER_REGISTRY }}/${{ env.CONTAINER_NAME }}
          flavor: |
            prefix=${{ matrix.os }}-
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=schedule
            type=schedule,pattern={{date 'YYYYMMDD'}}
            type=semver,pattern={{version}},value=${{ steps.version.outputs.version_full }}
            type=sha
          labels: |
            io.artifacthub.package.category=integration-delivery
            io.artifacthub.package.keywords=agent,azure,azure-devops,azure-pipelines,container,devops,docker,helm,kubernetes,pipelines,self-hosted,self-hosted-agent,auto-scale,keda
            io.artifacthub.package.license=Apache-2.0
            io.artifacthub.package.logo-url=https://raw.githubusercontent.com/${{ env.CONTAINER_NAME }}/${{ github.sha }}/logo.svg
            io.artifacthub.package.maintainers=[{"name":"${{ github.actor }}","email":"${{ github.actor }}@users.noreply.github.com"}]
            io.artifacthub.package.readme-url=https://raw.githubusercontent.com/${{ env.CONTAINER_NAME }}/${{ github.sha }}/README.md
            org.opencontainers.image.documentation=https://github.com/${{ env.CONTAINER_NAME }}
            org.opencontainers.image.vendor=${{ github.actor }}
            org.opencontainers.image.version=${{ steps.version.outputs.version_full }}

      - name: Build/push container
        uses: docker/build-push-action@v4
        with:
          cache-from: type=gha
          cache-to: type=gha,mode=max
          context: src/docker
          file: src/docker/Dockerfile-${{ matrix.os }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: ${{ matrix.arch }}
          push: true
          sbom: true
          tags: ${{ steps.meta.outputs.tags }}
